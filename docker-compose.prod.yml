version: '3.7'
services:
  db:
    container_name: postgres
    image: postgres
    restart: always
    build:
      context: ./back-end/db
    volumes:
      - db:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - network
    ports:
      - 5432:5432
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - network
  graphql:
    image: graphql
    container_name: graphql
    restart: always
    build:
      context: ./back-end/graphql
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - network
    ports:
      - 5433:5433
    command:
      [
        '--connection',
        '${DATABASE_URL}',
        '--port',
        '5433',
        '--schema',
        'public',
        '--append-plugins',
        'postgraphile-plugin-connection-filter,@graphile-contrib/pg-simplify-inflector',
        '--cors',
        '--retry-on-init-fail',
        '--dynamic-json',
        '--disable-graphiql',
        '--graphql',
        '/',
      ]
  nginx:
    image: nginx:1.15-alpine
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - graphql
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  db:
networks:
  network:
